@using Models.Characters
@using Models.Settings;

<MudCard Outlined="true">
	<MudCardHeader>
		<MudText>Choose a vice and its purveyor</MudText>
	</MudCardHeader>
	<MudCardContent>
		<MudStack>
			<MudSelect @bind-Value="Vice.Name" Label="Vice">
				@foreach (var option in ViceSettings)
				{
					<MudSelectItem T="string" Value="option.Name">
						<MudText>@option.Name</MudText>
						<MudText>@option.Description</MudText>
					</MudSelectItem>
				}
			</MudSelect>
			<MudText>@Elaboration()</MudText>
			<MudTextField @bind-Value="Vice.Description" HelperText="A detail about your purveyor and how you indulge in your vice." Placeholder="@ExamplePlaceholder()" />
			<MudExpansionPanels>
				<MudExpansionPanel Text="In world example purveyors">
					@foreach (var example in Examples())
					{
						<MudText>@example</MudText>
					}
				</MudExpansionPanel>
			</MudExpansionPanels>
		</MudStack>
	</MudCardContent>
</MudCard>

@code
{
	[Parameter, EditorRequired]
	public DossierVice Vice { get; set; } = new();

	[Parameter, EditorRequired]
	public ViceSetting[] ViceSettings { get; set; } = EmptyGameSetting.Vices();

	private string Elaboration() =>
		ViceSettings.FirstOrDefault(v => v.Name == Vice.Name)?.Description 
			?? string.Empty;

	private IEnumerable<string> Examples() =>
		ViceSettings.FirstOrDefault(v => v.Name == Vice.Name)?.Sources
			?? Array.Empty<string>();

	private string ExamplePlaceholder() =>
		Examples()
			.FirstOrDefault()
			?? string.Empty;
}