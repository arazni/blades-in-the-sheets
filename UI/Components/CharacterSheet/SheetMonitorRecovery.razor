@using Models.Characters
@using Models.Game
@using UI.Services
@inject SheetJank SheetJank

<MudStack>
	<MudStack Row="true" Justify="Justify.SpaceBetween">
		<MudStack Spacing="0">
			<MudText Typo="Typo.caption">Healing Project</MudText>
			@if (IsFixMode)
			{
				<MudRating @bind-SelectedValue="HealingClock.Time" MaxValue="MaxRecovery" FullIcon="@Icons.Material.Filled.Favorite" EmptyIcon="@Icons.Material.Filled.FavoriteBorder" Color="Color.Secondary" aria-label="@SetRecoveryProgressLabel" />
			}
			else
			{
				<MudRating SelectedValue="HealingClock.Time" ReadOnly="true" MaxValue="MaxRecovery" FullIcon="@Icons.Material.Filled.Favorite" EmptyIcon="@Icons.Material.Filled.FavoriteBorder" Color="Color.Secondary" aria-label="@CurrentRecoveryProgressLabel" />
			}
			@if (HealingClock.Rollover > 0)
			{
				<MudRating SelectedValue="HealingClock.Rollover" ReadOnly="true" MaxValue="HealingClock.Rollover" FullIcon="@Icons.Material.Filled.Favorite" EmptyIcon="@Icons.Material.Filled.FavoriteBorder" aria-label="@ExtraRecoveryProgressLabel" />
			}
		</MudStack>
		<MudButton Size="Size.Small" Style="@(Constants.Buttons.ButtonDimensionStyle + "max-height: 54px;")" Disabled="!Harm.CanHeal" OnClick="Heal" Variant="Variant.Outlined">Heal</MudButton>
	</MudStack>

	@if (!IsFixMode)
	{
		<MudStack Row="true">
			<MudSelect @bind-Value="RecoveryAmount" Label="Recovery progress" role="listbox" id="select-recovery-progress">
				<MudSelectItem Value="1" role="option" aria-label="Add 1">
					<MudStack Row=true>
						<MudIcon Icon="@Icons.Material.Filled.Favorite" Title="Add 1" />
						<MudText>1-3: +1</MudText>
					</MudStack>
				</MudSelectItem>
				<MudSelectItem Value="2" role="option" aria-label="Add 2">
					<MudStack Row=true>
						<MudIcon Icon="@Icons.Material.Filled.Favorite" Title="Add 2" />
						<MudText>4-5: +2</MudText>
					</MudStack>
				</MudSelectItem>
				<MudSelectItem Value="3" role="option" aria-label="Add 3">
					<MudStack Row=true>
						<MudIcon Icon="@Icons.Material.Filled.Favorite" Title="Add 3" />
						<MudText>6: +3</MudText>
					</MudStack>
				</MudSelectItem>
				<MudSelectItem Value="5" role="option" title="Add 5">
					<MudStack Row=true>
						<MudIcon Icon="@Icons.Material.Filled.Favorite" Title="Add 5" />
						<MudText>Critical: +5</MudText>
					</MudStack>
				</MudSelectItem>
			</MudSelect>
			<MudButton Size="Size.Small" Disabled="Harm.CanHeal" OnClick="(() => HealingClock.Progress(RecoveryAmount))" Variant="Variant.Outlined" aria-label="Add recovery progress" Style="@Constants.Buttons.ButtonDimensionStyle">Recover</MudButton>
		</MudStack>
	}

</MudStack>

@code
{
	[Parameter, EditorRequired]
	public Monitor Monitor { get; set; } = Monitor.Empty();

	[Parameter, EditorRequired]
	public bool IsFixMode { get; set; }

	MonitorHarm Harm =>
		Monitor.Harm;

	RolloverClock HealingClock =>
		Harm.HealingClock;

	int MaxRecovery =>
		HealingClock.Size;

	int RecoveryAmount = 1;

	void Heal()
	{
		Harm.Heal();
		SheetJank.NotifyHarmChanged();
	}

	string CurrentRecoveryProgressLabel =>
		$"Current recovery progress {HealingClock.Time} of {HealingClock.Size}";

	string SetRecoveryProgressLabel =>
		$"Set recovery progress {HealingClock.Time} of {HealingClock.Size}";

	string ExtraRecoveryProgressLabel =>
		$"Rollover recovery progress: {HealingClock.Rollover}";
}