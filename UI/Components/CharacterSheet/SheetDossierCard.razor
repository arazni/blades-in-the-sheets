@using Models.Characters
@using UI.Conveniences

<SheetCard @bind-IsFixMode="IsFixMode" Header="Dossier">
		<MudGrid>
			<MudItem xs="8">
				<MudTextField @bind-Value="Dossier.Name" HelperText="Name" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" />
			</MudItem>
			<MudItem xs="4">
				<MudTextField @bind-Value="Dossier.Alias" HelperText="AliasSynonym" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" />
			</MudItem>
		</MudGrid>
		<MudStack>
			<MudTextField @bind-Value="Dossier.Background.Description" HelperText="@BackgroundHelperText" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" Lines="3" />
			<MudTextField @bind-Value="Dossier.Heritage.Description" HelperText="@HeritageHelperText" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" Lines="3" />
			<MudTextField @bind-Value="Dossier.Vice.Description" HelperText="@ViceHelperText" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" Lines="3" />
			<MudTextField @bind-Value="Dossier.Look" HelperText="Look" ReadOnly="!IsFixMode" DisableUnderLine="!IsFixMode" Lines="3" />
		</MudStack>
</SheetCard>

@code
{
	[Parameter, EditorRequired]
	public Dossier Dossier { get; set; } = new();

	[Parameter]
	public string AliasSynonym { get; set; } = Models.Settings.Constants.DefaultNames.Alias;

	bool IsFixMode { get; set; } = false;

	string BackgroundHelperText =>
		$"Background: {Dossier.Background.Name}";

	string HeritageHelperText =>
		$"Heritage: {Dossier.Heritage.Name}";

	string ViceHelperText =>
		$"Vice: {Dossier.Vice.Name}";
}
