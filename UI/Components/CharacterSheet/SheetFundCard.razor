@using Models.Characters;
@using Models.Common;
@using UI.Services;
@inject SheetJank SheetJank;

<SheetCard @bind-IsFixMode="IsFixMode" Header="Fund">
	<div class="fund-row">
		<div class="fund-item">
			<label for="fund-satchel">Satchel: </label>
			<BladeRating @bind-Value="Fund.Satchel.Coins" MaxValue="Fund.Satchel.MaxCoins" CheckboxAriaLabelSuffix="@SatchelLabel" Id="fund-satchel" />
		</div>
		<div class="fund-item">
			@if (IsFixMode)
			{
				<FluentNumberField Style="width: 70px;" @bind-Value="Fund.Stash.Stash" Label="Stash:" ReadOnly="!IsFixMode" Min="@Fund.Stash.MinCoins.ToString()" Max="@Fund.Stash.MaxCoins.ToString()" />
			}
			else
			{
				<label>Stash: @Fund.Stash.Stash</label>
			}
		</div>
	</div>
	<div class="fund-row">
		<p class="fund-item">Lifestyle: @Fund.Lifestyle.Description()</p>
		<p class="fund-item">Rating: @Fund.Stash.Rating</p>
	</div>
	<div class="fund-row aie">
		<div class="control-item">
			<FluentNumberField Disabled="IsFixMode" Style="width: 70px;" @bind-Value="CoinChangeInput" Label="@CoinChangeInputLabel" Min="@Fund.MinCoins.ToString()" Max="@InputMaximum.ToString()" Id="fund-coin-change" />
		</div>
		<div class="fund-item je">
			<FluentButton Class="min-button" Disabled="!GainButtonEnabled" OnClick="() => Fund.Gain(CoinChangeInput)" Appearance="Appearance.Accent" IconStart="new Icons.Filled.Size20.Savings()">Gain</FluentButton>
			<FluentButton Class="min-button" Disabled="!SpendButtonEnabled" OnClick="() => Fund.Spend(CoinChangeInput)" Appearance="Appearance.Accent" IconStart="new Icons.Filled.Size20.MoneyHand()">Spend</FluentButton>
		</div>
	</div>
</SheetCard>
