@page "/"
@using Models.Characters
@using Models.Settings
@using Persistence.Json
@using System.Text
@using System.Linq
@using Persistence.Json.DataModels;
@using System.Collections.Immutable;
@using UI.Services
@using Microsoft.FluentUI.AspNetCore.Components
@using Orientation = Microsoft.FluentUI.AspNetCore.Components.Orientation
@using Icons = Microsoft.FluentUI.AspNetCore.Components.Icons
@using static Models.Settings.Constants;
@using static UI.Constants;
@inject IStorageService Storage
@inject IJSRuntime JS
@inject ILoader Loader
@inject NavigationManager Navigator

<div>
	<FluentStack Orientation="Orientation.Vertical">
		<h2>@HeaderText</h2>
		@foreach (var character in Characters)
		{
			<FluentCard>
				<div class="card-header">
					<div class="card-header-left">
						<FluentAnchor Appearance="Appearance.Hypertext" Href="@character.Link" Class="character-link">@character.Alias the @character.Playbook</FluentAnchor>
					</div>
					<div class="card-header-right">
						<FluentButton Appearance="Appearance.Accent" OnClick="_ => Download(character)" Class="@DownloadModeClass" aria-label="@DownloadCharacterLabel(character.Name)">Export</FluentButton>
						<FluentButton Appearance="Appearance.Accent" OnClick="_ => Delete(character.Id)" Class="@DeleteModeClass" aria-label="@DeleteCharacterLabel(character.Name)" Color="Color.Error">Delete</FluentButton>
					</div>
				</div>
				<FluentStack Orientation="Orientation.Vertical">
					<p>@Blurb(character)</p>
				</FluentStack>
			</FluentCard>
		}
		<FluentCard>
			<div class="card-header">
				<div class="card-header-left">
					<h3>Roster</h3>
				</div>
				<div class="card-header-right">
					@if (Characters.Any())
					{
						<FluentButton Title="Enable Download Mode" IconStart="@(new Icons.Filled.Size20.ArrowDownload())" Appearance="Appearance.Accent" OnClick="_ => IsDownloadMode = true" Class="@NotDownloadModeClass"></FluentButton>
						<FluentButton Title="Disable Download Mode" IconStart="@(new Icons.Filled.Size20.ArrowDownloadOff())" Appearance="Appearance.Accent" OnClick="_ => IsDownloadMode = false" Class="@DownloadModeClass"></FluentButton>
						<FluentButton Title="Enable Delete Mode" IconStart="@(new Icons.Filled.Size20.Delete())" Appearance="Appearance.Accent" OnClick="_ => IsDeleteMode = true" Class="@NotDeleteModeClass"></FluentButton>
						<FluentButton Title="Disable Delete Mode" IconStart="@(new Icons.Filled.Size20.DeleteOff())" Appearance="Appearance.Accent" OnClick="_ => IsDeleteMode = false" Class="@DeleteModeClass"></FluentButton>
					}
				</div>
			</div>
			<FluentStack Orientation="Orientation.Vertical">
				<FluentSelect TOption="GameFile" Items="AvailableGameFiles" @bind-SelectedOption="@SelectedGameFile" OptionText="gameFile => gameFile.Name" Label="Select a Game"></FluentSelect>
				<FluentAnchor Href="@New()" Appearance="Appearance.Accent" Class="button">
					Create a Character
					<FluentIcon Value="@(new Icons.Regular.Size20.DocumentAdd())" Slot="start" Color="@Microsoft.FluentUI.AspNetCore.Components.Color.Fill"/>
				</FluentAnchor>
				<FluentInputFile AnchorId="ImportCharacters" DragDropZoneVisible="false" Mode="InputFileMode.Stream" Multiple="true" Accept=".json" OnFileUploaded="@UploadFiles" OnCompleted="@UploadComplete" />
				<FluentButton Id="ImportCharacters" Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size20.ArrowUpload())" Class="button">Import Characters</FluentButton>
			</FluentStack>
		</FluentCard>
	</FluentStack>
</div>