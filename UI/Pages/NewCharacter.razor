@page "/new/{GameFileStem?}"
@using Models.Characters
@using Models.Settings
@using Persistence.Json
@using UI.Components
@using UI.Components.NewCharacter
@inject ILoader Loader

<MudContainer MaxWidth="MaxWidth.Small">
	<MudStack>
		<MudText Typo="Typo.h3" Align="Align.Center">@GameName</MudText>
		<MudText Typo="Typo.h4" Align="Align.Center">Choose a playbook.</MudText>
		<MudGrid AlignItems="AlignItems.Center">
			@foreach (var (book, hook) in options)
			{
				<MudItem xs="12">
					<NewCharacterPlaybookOption GameFileStem="@GameFileStem" PlaybookName="@book" Hook="@hook" />
				</MudItem>
			}
		</MudGrid>
	</MudStack>
</MudContainer>

@code
{
	[Parameter]
	public string? GameFileStem { get; set; }

	GameSetting GameSetting { get; set; } = EmptyGameSetting.Game();

	string GameName => GameSetting.Name;

	protected override async Task OnParametersSetAsync()
	{
		GameFileStem ??= Models.Settings.Constants.Games.BladesInTheDarkStem;

		GameSetting = await Loader.LoadSetting(GameFileStem);

		options = GameSetting.Playbooks.Select(p => (p.Name, p.Hook))
			.ToArray();

		await base.OnParametersSetAsync();
	}

	private (string, string)[] options = Array.Empty<(string, string)>();
}
